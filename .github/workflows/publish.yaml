name: image publish
run-name: "Publish ROCK image from ${{ inputs.rock }} to ghcr.io/canonical/identity-platform-login-ui"

on:
  workflow_call:
    inputs:
      rock:
        type: string
        required: true
        description: "rock path to download"
    outputs:
      image:
        description: "container image"
        value: ${{ jobs.publish.outputs.image }}

jobs:
  publish:
    runs-on: ubuntu-latest
    outputs:
      image: ${{ steps.set.outputs.image }}
    steps:
      - name: Checkout repository
        uses: actions/checkout@8ade135a41bc03ea155e62e844d188df1ea18608 # v4

      - name: Download Artifact
        uses: actions/download-artifact@9bc31d5ccc31df68ecc42ccf4149144866c47d8a # v3
        with:
          name: ${{ inputs.rock }}

      - name: Install Skopeo
        run: sudo snap install --devmode --channel edge skopeo

      - name: Upload ROCK to ghcr.io in latest channel
        id: latest
        if: ${{ github.ref_type }} == "branch"
        run: |
          versions=(latest "${{ github.sha }}")

          for version in "${versions[@]}"; do
            sudo skopeo --insecure-policy copy \
              --dest-creds "${{ github.actor }}:${{ secrets.GITHUB_TOKEN }}" \
              oci-archive:$(realpath ./"${{ inputs.rock }}") \
              docker://ghcr.io/canonical/identity-platform-login-ui:"${version}"
          done

          echo "image=ghcr.io/canonical/identity-platform-login-ui:${{ github.sha }}" >> "$GITHUB_ENV"

      - name: Upload ROCK to ghcr.io in stable channel
        id: stable
        if: ${{ github.ref_type }} == "tag"
        run: |
          versions=(stable "${{ github.ref_name }}")

          for version in "${versions[@]}"; do
            sudo skopeo --insecure-policy copy \
              --dest-creds "${{ github.actor }}:${{ secrets.GITHUB_TOKEN }}" \
              oci-archive:$(realpath ./"${{ inputs.rock }}") \
              docker://ghcr.io/canonical/identity-platform-login-ui:"${version}"
          done

          echo "image=ghcr.io/canonical/identity-platform-login-ui:${{ github.ref_name }}" >> "$GITHUB_ENV"

      - name: Set output of image
        id: set
        run: echo "image=$image" >> "$GITHUB_OUTPUT"
