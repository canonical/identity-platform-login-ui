version: '3.7'
services:
  kratos-migrate:
    image: oryd/kratos:v1.0.0
    environment:
      - DSN=sqlite:///var/lib/sqlite/db.sqlite?_fk=true&mode=rwc
    volumes:
      - type: volume
        source: kratos-sqlite
        target: /var/lib/sqlite
        read_only: false
      - type: bind
        source: ./docker/kratos
        target: /etc/config/kratos
    command: -c /etc/config/kratos/kratos.yml migrate sql -e --yes
    restart: on-failure
    networks:
      - intranet
  kratos:
    depends_on:
      - kratos-migrate
    image: oryd/kratos:v1.0.0
    ports:
      - '4433:4433' # public
      - '4434:4434' # admin
    restart: unless-stopped
    environment:
      - DSN=sqlite:///var/lib/sqlite/db.sqlite?_fk=true
      - LOG_LEVEL=trace
      - SELFSERVICE_METHODS_OIDC_CONFIG_PROVIDERS_0_CLIENT_ID=${CLIENT_ID}
      - SELFSERVICE_METHODS_OIDC_CONFIG_PROVIDERS_0_CLIENT_SECRET=${CLIENT_SECRET}
    command: serve -c /etc/config/kratos/kratos.yml --dev --watch-courier
    volumes:
      - type: volume
        source: kratos-sqlite
        target: /var/lib/sqlite
        read_only: false
      - type: bind
        source: ./docker/kratos
        target: /etc/config/kratos
    networks:
      - intranet
    extra_hosts:
      - "host.docker.internal:host-gateway"
  hydra:
    image: hydra:latest
    ports:
      - "4444:4444" # Public port
      - "4445:4445" # Admin port
    volumes:
      - type: volume
        source: hydra-sqlite
        target: /var/lib/sqlite
        read_only: false
      - type: bind
        source: ./docker/hydra
        target: /etc/config/hydra
    environment:
      - DSN=postgresql://hydra:hydra@postgres/hydra?sslmode=disable
      - CORS_DEBUG=1
    entrypoint: hydra serve -c /etc/config/hydra/hydra.yml --dev all
    restart: unless-stopped
    depends_on:
      - hydra-migrate
    networks:
      - intranet
  hydra-migrate:
    image: hydra:latest
    environment:
      - DSN=postgresql://hydra:hydra@postgres/hydra?sslmode=disable
    command: exec hydra migrate -c /etc/config/hydra/hydra.yml sql -e --yes
    volumes:
      - type: volume
        source: hydra-sqlite
        target: /var/lib/sqlite
        read_only: false
      - type: bind
        source: ./docker/hydra
        target: /etc/config/hydra
    restart: on-failure
    networks:
      - intranet
    depends_on:
      postgres:
        condition: service_healthy
  mailslurper:
    image: oryd/mailslurper:latest-smtps
    ports:
      - '4436:4436'
      - '4437:4437'
    networks:
      - intranet
  postgres:
    image: postgres
    container_name: postgres
    restart: always
    ports:
      - 5432:5432
    environment:
      POSTGRES_DB: hydra
      POSTGRES_USER: hydra
      POSTGRES_PASSWORD: hydra
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U hydra" ]
      interval: 5s
      timeout: 5s
      retries: 5
    networks:
      - intranet
networks:
  intranet:
volumes:
  kratos-sqlite:
  hydra-sqlite:
